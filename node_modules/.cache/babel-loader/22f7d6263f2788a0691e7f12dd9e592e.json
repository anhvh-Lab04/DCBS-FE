{"ast":null,"code":"import _slicedToArray from \"E:\\\\Semester 5\\\\SWP\\\\DCBS-FE\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"E:\\\\Semester 5\\\\SWP\\\\DCBS-FE\\\\frontend\\\\src\\\\BodyContent\\\\Admin\\\\ViewDocDetail\\\\DoctorDetail.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './DoctorDetail.css';\nvar DoctorDetail = function DoctorDetail() {\n  var _useParams = useParams(),\n    doctorId = _useParams.doctorId; // Truy cập vào doctorId từ URL parameter\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    doctorInfo = _useState2[0],\n    setDoctorInfo = _useState2[1]; // const [scheduleInfo, setScheduleInfo] = useState({\n  //   id: '',\n  //   time: '',\n  //   date: '',\n  //   doctorID: '',\n  //   createdAt: '',\n  //   updatedAt: '',\n  // });\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scheduleInfo = _useState4[0],\n    setScheduleInfo = _useState4[1];\n  useEffect(function () {\n    // Gửi yêu cầu GET tới API để lấy thông tin chi tiết của bác sĩ\n    axios.get(\"http://localhost:3000/api/account/doctor/details/\".concat(doctorId)).then(function (response) {\n      setDoctorInfo(response.data.doctor); // Cập nhật thông tin chi tiết của bác sĩ\n    }).catch(function (error) {\n      console.error(error);\n      // Xử lý lỗi nếu có\n    });\n  }, [doctorId]);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const requestBody = {\n  //         email: 'abcdbc@gmail.com',\n  //       };\n\n  //       const config = {\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //       };\n\n  //       const response = await axios.get('http://localhost:3000/api/account/doctor/details/${doctorId}');\n  //       setDoctorInfo(response.data);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  useEffect(function () {\n    // Gửi yêu cầu GET tới API để lấy thông tin chi tiết của bác sĩ\n    axios.get(\"http://localhost:3000/api/slot/schedule/\".concat(doctorId)).then(function (response) {\n      setScheduleInfo(response.data); // Update scheduleInfo with the response data\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, [doctorId]);\n  useEffect(function () {\n    if (doctorInfo) {\n      console.log('Doctor Info:', doctorInfo);\n    }\n    if (scheduleInfo) {\n      console.log('Schedule Info:', scheduleInfo);\n    }\n  }, [doctorInfo, scheduleInfo]);\n  var handleEditInfo = function handleEditInfo() {\n    // Thực hiện các thao tác cần thiết khi click vào nút chỉnh sửa\n    console.log('Chỉnh sửa thông tin bác sĩ');\n  };\n\n  // Kiểm tra xem dữ liệu có được tải lên từ server hay chưa\n  // if (!doctorInfo) {\n  //   return <div>Loading...</div>;\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctor-detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, scheduleInfo && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, \"L\\u1ECBch \\u0111\\xE3 t\\u1EA1o\"), scheduleInfo.map(function (schedule) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: schedule.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, schedule.date), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, schedule.time), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, schedule.status));\n  }))));\n};\nexport default DoctorDetail;","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","DoctorDetail","_useParams","doctorId","_useState","_useState2","_slicedToArray","doctorInfo","setDoctorInfo","_useState3","_useState4","scheduleInfo","setScheduleInfo","get","concat","then","response","data","doctor","catch","error","console","log","handleEditInfo","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","map","schedule","key","id","date","time","status"],"sources":["E:/Semester 5/SWP/DCBS-FE/frontend/src/BodyContent/Admin/ViewDocDetail/DoctorDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './DoctorDetail.css';\r\n\r\nconst DoctorDetail = () => {\r\n  const { doctorId } = useParams(); // Truy cập vào doctorId từ URL parameter\r\n\r\n  const [doctorInfo, setDoctorInfo] = useState(null);\r\n  // const [scheduleInfo, setScheduleInfo] = useState({\r\n  //   id: '',\r\n  //   time: '',\r\n  //   date: '',\r\n  //   doctorID: '',\r\n  //   createdAt: '',\r\n  //   updatedAt: '',\r\n  // });\r\n\r\n  const [scheduleInfo, setScheduleInfo] = useState(null);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // Gửi yêu cầu GET tới API để lấy thông tin chi tiết của bác sĩ\r\n    axios\r\n      .get(`http://localhost:3000/api/account/doctor/details/${doctorId}`)\r\n      .then((response) => {\r\n        setDoctorInfo(response.data.doctor); // Cập nhật thông tin chi tiết của bác sĩ\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Xử lý lỗi nếu có\r\n      });\r\n  }, [doctorId]);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const requestBody = {\r\n  //         email: 'abcdbc@gmail.com',\r\n  //       };\r\n\r\n  //       const config = {\r\n  //         headers: {\r\n  //           'Content-Type': 'application/json',\r\n  //         },\r\n  //       };\r\n\r\n  //       const response = await axios.get('http://localhost:3000/api/account/doctor/details/${doctorId}');\r\n  //       setDoctorInfo(response.data);\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    // Gửi yêu cầu GET tới API để lấy thông tin chi tiết của bác sĩ\r\n    axios\r\n      .get(`http://localhost:3000/api/slot/schedule/${doctorId}`)\r\n      .then((response) => {\r\n        setScheduleInfo(response.data); // Update scheduleInfo with the response data\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, [doctorId]);\r\n\r\n  useEffect(() => {\r\n    if (doctorInfo) {\r\n      console.log('Doctor Info:', doctorInfo);\r\n    }\r\n    if (scheduleInfo) {\r\n      console.log('Schedule Info:', scheduleInfo);\r\n    }\r\n  }, [doctorInfo, scheduleInfo]);\r\n\r\n\r\n  const handleEditInfo = () => {\r\n    // Thực hiện các thao tác cần thiết khi click vào nút chỉnh sửa\r\n    console.log('Chỉnh sửa thông tin bác sĩ');\r\n  };\r\n\r\n  // Kiểm tra xem dữ liệu có được tải lên từ server hay chưa\r\n  // if (!doctorInfo) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n\r\n  return (\r\n    <div className=\"doctor-detail\">\r\n      {/* <div className=\"avatar-container\">\r\n        <img src={doctorInfo.avatar} alt=\"Doctor Avatar\" className=\"doctor-avatar\" />\r\n      </div> */}\r\n      <div className=\"info-container\">\r\n        {/* <div className=\"doctor-name\">{doctorInfo.fullname}</div>\r\n        <div className=\"doctor-info\">\r\n          <span className=\"info-label\">ID Card:</span>\r\n          <span>{doctorInfo.idCard}</span>\r\n        </div>\r\n        <div className=\"doctor-info\">\r\n          <span className=\"info-label\">Gender:</span>\r\n          <span>{doctorInfo.gender}</span>\r\n        </div>\r\n        <div className=\"doctor-info\">\r\n          <span className=\"info-label\">Date of Birth:</span>\r\n          <span>{doctorInfo.dateOfBirth}</span>\r\n        </div>\r\n        <div className=\"doctor-info\">\r\n          <span className=\"info-label\">Phone Number:</span>\r\n          <span>{doctorInfo.phone}</span>\r\n        </div>\r\n        <div className=\"doctor-info\">\r\n          <span className=\"info-label\">Email:</span>\r\n          <span>{doctorInfo.email}</span>\r\n        </div>\r\n        <div className=\"doctor-info\">\r\n          <span className=\"info-label\">Address:</span>\r\n          <span>{doctorInfo.address}</span>\r\n        </div>\r\n        <div className=\"doctor-info\">\r\n          <span className=\"info-label\">qualification:</span>\r\n          <span>{doctorInfo.qualification}</span>\r\n        </div>\r\n        <div className=\"doctor-info\">\r\n          <span className=\"info-label\">Experience:</span>\r\n          <span>{doctorInfo.experience}</span>\r\n        </div>\r\n        <div className=\"workday-container\">\r\n          <span className=\"workday-label\">Workday:</span>\r\n          <input\r\n            type=\"date\"\r\n            value={doctorInfo.workday}\r\n            onChange={(e) => {\r\n              // Cập nhật workday của bác sĩ\r\n              setDoctorInfo({ ...doctorInfo, workday: e.target.value });\r\n            }}\r\n            className=\"workday-input\"\r\n          /> */}\r\n          {scheduleInfo && (\r\n  <>\r\n    <h3>Lịch đã tạo</h3>\r\n    {scheduleInfo.map((schedule) => (\r\n      <div key={schedule.id}>\r\n        <div>{schedule.date}</div>\r\n        <div>{schedule.time}</div>\r\n        <div>{schedule.status}</div>\r\n      </div>\r\n    ))}\r\n  </>\r\n)}\r\n\r\n        </div>\r\n        {/* <div className=\"edit-button-container\">\r\n          <button className=\"edit-button\" onClick={handleEditInfo}>\r\n            Edit Information\r\n          </button>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}