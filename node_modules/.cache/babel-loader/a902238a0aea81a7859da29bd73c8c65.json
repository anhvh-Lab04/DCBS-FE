{"ast":null,"code":"import _slicedToArray from \"E:\\\\Semester 5\\\\SWP\\\\DCBS-FE\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Semester 5\\\\SWP\\\\DCBS-FE\\\\frontend\\\\src\\\\BodyContent\\\\Doctor\\\\ViewTreatmentProfile\\\\SymptomList\\\\SymptomList.js\";\nimport React, { useState } from 'react';\nimport './SymptomList.css';\nfunction SymptomList(_ref) {\n  var _this = this;\n  var symptoms = _ref.symptoms,\n    onAddSymptom = _ref.onAddSymptom;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchQuery = _useState2[0],\n    setSearchQuery = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchResults = _useState4[0],\n    setSearchResults = _useState4[1];\n  var handleSearch = function handleSearch() {\n    // Perform search logic here\n    // Example: Fetch search results from API based on searchQuery\n    var mockSearchResults = ['Symptom 1', 'Symptom 2', 'Symptom 3'];\n    setSearchResults(mockSearchResults);\n  };\n  var handleSelectSymptom = function handleSelectSymptom(symptom) {\n    onAddSymptom(symptom);\n    setSearchQuery('');\n    setSearchResults([]);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"symptom-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Symptom Search\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search Symptoms\",\n    value: searchQuery,\n    onChange: function onChange(e) {\n      return setSearchQuery(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, searchResults.map(function (result, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"result-item\",\n      key: index,\n      onClick: function onClick() {\n        return handleSelectSymptom(result);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, result);\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"create-symptom-button\",\n    onClick: function onClick() {\n      return onAddSymptom('New Symptom');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Create New Symptom\"));\n}\nexport default SymptomList;","map":{"version":3,"names":["React","useState","SymptomList","_ref","_this","symptoms","onAddSymptom","_useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","handleSearch","mockSearchResults","handleSelectSymptom","symptom","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","result","index","key"],"sources":["E:/Semester 5/SWP/DCBS-FE/frontend/src/BodyContent/Doctor/ViewTreatmentProfile/SymptomList/SymptomList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SymptomList.css';\r\n\r\nfunction SymptomList({ symptoms, onAddSymptom }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const handleSearch = () => {\r\n    // Perform search logic here\r\n    // Example: Fetch search results from API based on searchQuery\r\n    const mockSearchResults = ['Symptom 1', 'Symptom 2', 'Symptom 3'];\r\n    setSearchResults(mockSearchResults);\r\n  };\r\n\r\n  const handleSelectSymptom = (symptom) => {\r\n    onAddSymptom(symptom);\r\n    setSearchQuery('');\r\n    setSearchResults([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"symptom-list-container\">\r\n      <h3>Symptom Search</h3>\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Symptoms\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n      <div className=\"search-results\">\r\n        {searchResults.map((result, index) => (\r\n          <div\r\n            className=\"result-item\"\r\n            key={index}\r\n            onClick={() => handleSelectSymptom(result)}\r\n          >\r\n            {result}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button className=\"create-symptom-button\" onClick={() => onAddSymptom('New Symptom')}>\r\n        Create New Symptom\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SymptomList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}