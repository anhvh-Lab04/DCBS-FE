{"ast":null,"code":"import _toConsumableArray from \"D:\\\\netbean\\\\NodeJS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\netbean\\\\NodeJS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\netbean\\\\NodeJS\\\\frontend\\\\src\\\\BodyContent\\\\Admin\\\\CreateSlot\\\\AdminCreateSlot.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autosuggest from 'react-autosuggest';\nimport './AdminCreateSlot.css';\nfunction CreateSchedulePage() {\n  var _this = this;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDoctor = _useState2[0],\n    setSelectedDoctor = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    startDate = _useState4[0],\n    setStartDate = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    endDate = _useState6[0],\n    setEndDate = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedShifts = _useState8[0],\n    setSelectedShifts = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isScheduleCreated = _useState10[0],\n    setIsScheduleCreated = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    searchValue = _useState12[0],\n    setSearchValue = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    suggestedDoctors = _useState14[0],\n    setSuggestedDoctors = _useState14[1];\n  useEffect(function () {\n    // Gửi yêu cầu GET tới API để lấy danh sách bác sĩ\n    axios.get('http://localhost:3000/api/doctors').then(function (response) {\n      setSuggestedDoctors(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n  var handleSelectDoctor = function handleSelectDoctor(doctor) {\n    setSelectedDoctor(doctor);\n    setSearchValue(doctor.fullname);\n    setSuggestedDoctors([]);\n  };\n  var handleSelectStartDate = function handleSelectStartDate(date) {\n    setStartDate(date);\n  };\n  var handleSelectEndDate = function handleSelectEndDate(date) {\n    setEndDate(date);\n  };\n  var handleSelectShift = function handleSelectShift(shift) {\n    var updatedShifts = _toConsumableArray(selectedShifts);\n    if (updatedShifts.includes(shift)) {\n      updatedShifts.splice(updatedShifts.indexOf(shift), 1);\n    } else {\n      updatedShifts.push(shift);\n    }\n    setSelectedShifts(updatedShifts);\n  };\n  var handleSaveSchedule = function handleSaveSchedule() {\n    if (selectedDoctor && startDate && endDate && selectedShifts.length > 0) {\n      setIsScheduleCreated(true);\n    } else {\n      // Hiển thị thông báo lỗi hoặc yêu cầu người dùng nhập đầy đủ thông tin\n    }\n  };\n  var handleSearchDoctor = function handleSearchDoctor(value) {\n    setSearchValue(value);\n  };\n  var getSuggestions = function getSuggestions(value) {\n    var inputValue = value.trim().toLowerCase();\n    var inputLength = inputValue.length;\n    return inputLength === 0 ? [] : suggestedDoctors.filter(function (doctor) {\n      return doctor.fullname.toLowerCase().slice(0, inputLength) === inputValue;\n    });\n  };\n  var renderSuggestion = function renderSuggestion(suggestion) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return handleSelectDoctor(suggestion);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }, suggestion.fullname);\n  };\n  var onChange = function onChange(event, _ref) {\n    var newValue = _ref.newValue;\n    setSearchValue(newValue);\n  };\n  var onSuggestionsFetchRequested = function onSuggestionsFetchRequested(_ref2) {\n    var value = _ref2.value;\n    setSuggestedDoctors(getSuggestions(value));\n  };\n  var onSuggestionsClearRequested = function onSuggestionsClearRequested() {\n    setSuggestedDoctors([]);\n  };\n  var inputProps = {\n    placeholder: 'Tìm kiếm bác sĩ',\n    value: searchValue,\n    onChange: onChange\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-create-slot__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"T\\u1EA1o L\\u1ECBch L\\xE0m Vi\\u1EC7c\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Ch\\u1ECDn b\\xE1c s\\u0129\"), /*#__PURE__*/React.createElement(Autosuggest, {\n    suggestions: suggestedDoctors,\n    onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n    onSuggestionsClearRequested: onSuggestionsClearRequested,\n    getSuggestionValue: function getSuggestionValue(suggestion) {\n      return suggestion.fullname;\n    },\n    renderSuggestion: renderSuggestion,\n    inputProps: inputProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }))));\n}\nexport default CreateSchedulePage;","map":{"version":3,"names":["React","useState","useEffect","axios","Autosuggest","CreateSchedulePage","_this","_useState","_useState2","_slicedToArray","selectedDoctor","setSelectedDoctor","_useState3","_useState4","startDate","setStartDate","_useState5","_useState6","endDate","setEndDate","_useState7","_useState8","selectedShifts","setSelectedShifts","_useState9","_useState10","isScheduleCreated","setIsScheduleCreated","_useState11","_useState12","searchValue","setSearchValue","_useState13","_useState14","suggestedDoctors","setSuggestedDoctors","get","then","response","data","catch","error","console","handleSelectDoctor","doctor","fullname","handleSelectStartDate","date","handleSelectEndDate","handleSelectShift","shift","updatedShifts","_toConsumableArray","includes","splice","indexOf","push","handleSaveSchedule","length","handleSearchDoctor","value","getSuggestions","inputValue","trim","toLowerCase","inputLength","filter","slice","renderSuggestion","suggestion","createElement","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","event","_ref","newValue","onSuggestionsFetchRequested","_ref2","onSuggestionsClearRequested","inputProps","placeholder","className","suggestions","getSuggestionValue"],"sources":["D:/netbean/NodeJS/frontend/src/BodyContent/Admin/CreateSlot/AdminCreateSlot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport './AdminCreateSlot.css';\r\n\r\nfunction CreateSchedulePage() {\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [selectedShifts, setSelectedShifts] = useState([]);\r\n  const [isScheduleCreated, setIsScheduleCreated] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [suggestedDoctors, setSuggestedDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Gửi yêu cầu GET tới API để lấy danh sách bác sĩ\r\n    axios\r\n      .get('http://localhost:3000/api/doctors')\r\n      .then((response) => {\r\n        setSuggestedDoctors(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSelectDoctor = (doctor) => {\r\n    setSelectedDoctor(doctor);\r\n    setSearchValue(doctor.fullname);\r\n    setSuggestedDoctors([]);\r\n  };\r\n\r\n  const handleSelectStartDate = (date) => {\r\n    setStartDate(date);\r\n  };\r\n\r\n  const handleSelectEndDate = (date) => {\r\n    setEndDate(date);\r\n  };\r\n\r\n  const handleSelectShift = (shift) => {\r\n    const updatedShifts = [...selectedShifts];\r\n    if (updatedShifts.includes(shift)) {\r\n      updatedShifts.splice(updatedShifts.indexOf(shift), 1);\r\n    } else {\r\n      updatedShifts.push(shift);\r\n    }\r\n    setSelectedShifts(updatedShifts);\r\n  };\r\n\r\n  const handleSaveSchedule = () => {\r\n    if (selectedDoctor && startDate && endDate && selectedShifts.length > 0) {\r\n      setIsScheduleCreated(true);\r\n    } else {\r\n      // Hiển thị thông báo lỗi hoặc yêu cầu người dùng nhập đầy đủ thông tin\r\n    }\r\n  };\r\n\r\n  const handleSearchDoctor = (value) => {\r\n    setSearchValue(value);\r\n  };\r\n\r\n  const getSuggestions = (value) => {\r\n    const inputValue = value.trim().toLowerCase();\r\n    const inputLength = inputValue.length;\r\n\r\n    return inputLength === 0\r\n      ? []\r\n      : suggestedDoctors.filter(\r\n          (doctor) =>\r\n            doctor.fullname.toLowerCase().slice(0, inputLength) === inputValue\r\n        );\r\n  };\r\n\r\n  const renderSuggestion = (suggestion) => (\r\n    <div onClick={() => handleSelectDoctor(suggestion)}>\r\n      {suggestion.fullname}\r\n    </div>\r\n  );\r\n\r\n  const onChange = (event, { newValue }) => {\r\n    setSearchValue(newValue);\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestedDoctors(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    setSuggestedDoctors([]);\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: 'Tìm kiếm bác sĩ',\r\n    value: searchValue,\r\n    onChange: onChange,\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"admin-create-slot__container\">\r\n        <h2>Tạo Lịch Làm Việc</h2>\r\n\r\n        {/* Chọn bác sĩ */}\r\n        <div>\r\n          <h3>Chọn bác sĩ</h3>\r\n          <Autosuggest\r\n            suggestions={suggestedDoctors}\r\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n            onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n            getSuggestionValue={(suggestion) => suggestion.fullname}\r\n            renderSuggestion={renderSuggestion}\r\n            inputProps={inputProps}\r\n          />\r\n        </div>\r\n\r\n        {/* Chọn khoảng thời gian */}\r\n        {/* ... */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateSchedulePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}